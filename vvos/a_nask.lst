     1 00000000                                 ;a_nask
     2 00000000                                 ;TAB=4
     3 00000000                                 
     4 00000000                                 [FORMAT "WCOFF"]
     5 00000000                                 [INSTRSET "i486p"]
     6 00000000                                 [BITS 32]
     7 00000000                                 [FILE "a_nask.nas"]
     8 00000000                                 
     9 00000000                                 		GLOBAL 	_api_putchar
    10 00000000                                 		GLOBAL 	_api_end
    11 00000000                                 		GLOBAL 	_api_putstr
    12 00000000                                 		GLOBAL 	_api_openwin
    13 00000000                                 		GLOBAL 	_api_putstrwin
    14 00000000                                 		GLOBAL 	_api_boxfillwin
    15 00000000                                 		GLOBAL 	_api_initmalloc
    16 00000000                                 		GLOBAL 	_api_malloc
    17 00000000                                 		GLOBAL 	_api_free
    18 00000000                                 		GLOBAL 	_api_point
    19 00000000                                 		GLOBAL 	_api_refreshwin
    20 00000000                                 		GLOBAL 	_api_linewin
    21 00000000                                 		GLOBAL 	_api_closewin
    22 00000000                                 
    23                                          [SECTION .text]
    24 00000000                                 
    25 00000000                                 _api_putchar: 								;void api_putchar(int c);
    26 00000000 BA 00000001                     		MOV 	EDX, 1
    27 00000005 8A 44 24 04                     		MOV 	AL, [ESP+4]
    28 00000009 CD 40                           		INT 	0x40
    29 0000000B C3                              		RET
    30 0000000C                                 
    31 0000000C                                 _api_end:
    32 0000000C BA 00000004                     		MOV 	EDX, 4
    33 00000011 CD 40                           		INT 	0x40
    34 00000013                                 
    35 00000013                                 _api_putstr:
    36 00000013 53                              		PUSH 	EBX
    37 00000014 BA 00000002                     		MOV 	EDX, 2
    38 00000019 8B 5C 24 08                     		MOV 	EBX, [ESP+8]
    39 0000001D CD 40                           		INT 	0x40
    40 0000001F 5B                              		POP 	EBX
    41 00000020 C3                              		RET
    42 00000021                                 
    43 00000021                                 _api_openwin: ; int api_openwin(char *buf, int xsiz, int ysiz, int col_inv, char *title)
    44 00000021 57                              		PUSH 	EDI
    45 00000022 56                              		PUSH 	ESI
    46 00000023 53                              		PUSH 	EBX
    47 00000024 BA 00000005                     		MOV 	EDX, 5
    48 00000029 8B 5C 24 10                     		MOV 	EBX, [ESP+12+4] 			; buf
    49 0000002D 8B 74 24 14                     		MOV 	ESI, [ESP+12+8] 			; xsiz
    50 00000031 8B 7C 24 18                     		MOV 	EDI, [ESP+12+12] 			; ysiz
    51 00000035 8B 44 24 1C                     		MOV 	EAX, [ESP+12+16] 			; col_inv
    52 00000039 8B 4C 24 20                     		MOV 	ECX, [ESP+12+20] 			; title
    53 0000003D CD 40                           		INT 	0x40
    54 0000003F 5B                              		POP 	EBX
    55 00000040 5E                              		POP 	ESI
    56 00000041 5F                              		POP 	EDI
    57 00000042 C3                              		RET
    58 00000043                                 
    59 00000043                                 _api_putstrwin: ; void api_putstrwin(int win, int x, int y, int col, int len, char *str)
    60 00000043 57                              		PUSH 	EDI
    61 00000044 56                              		PUSH 	ESI
    62 00000045 55                              		PUSH 	EBP
    63 00000046 53                              		PUSH 	EBX
    64 00000047 BA 00000006                     		MOV 	EDX, 6
    65 0000004C 8B 5C 24 14                     		MOV 	EBX, [ESP+16+4]
    66 00000050 8B 74 24 18                     		MOV 	ESI, [ESP+16+8]
    67 00000054 8B 7C 24 1C                     		MOV 	EDI, [ESP+16+12]
    68 00000058 8B 44 24 20                     		MOV 	EAX, [ESP+16+16]
    69 0000005C 8B 4C 24 24                     		MOV 	ECX, [ESP+16+20]
    70 00000060 8B 6C 24 28                     		MOV 	EBP, [ESP+16+24]
    71 00000064 CD 40                           		INT 	0x40
    72 00000066 5B                              		POP 	EBX
    73 00000067 5D                              		POP 	EBP
    74 00000068 5E                              		POP 	ESI
    75 00000069 5F                              		POP 	EDI
    76 0000006A C3                              		RET
    77 0000006B                                 
    78 0000006B                                 _api_boxfillwin: ; void api_boxfillwin(int win, int x0, int y0, int x1, inty1, int col)
    79 0000006B 57                              		PUSH 	EDI
    80 0000006C 56                              		PUSH 	ESI
    81 0000006D 55                              		PUSH 	EBP
    82 0000006E 53                              		PUSH 	EBX
    83 0000006F BA 00000007                     		MOV 	EDX, 7
    84 00000074 8B 5C 24 14                     		MOV 	EBX, [ESP+16+4]
    85 00000078 8B 44 24 18                     		MOV 	EAX, [ESP+16+8]
    86 0000007C 8B 4C 24 1C                     		MOV 	ECX, [ESP+16+12]
    87 00000080 8B 74 24 20                     		MOV 	ESI, [ESP+16+16]
    88 00000084 8B 7C 24 24                     		MOV 	EDI, [ESP+16+20]
    89 00000088 8B 6C 24 28                     		MOV 	EBP, [ESP+16+24]
    90 0000008C CD 40                           		INT 	0x40
    91 0000008E 5B                              		POP 	EBX
    92 0000008F 5D                              		POP 	EBP
    93 00000090 5E                              		POP 	ESI
    94 00000091 5F                              		POP 	EDI
    95 00000092 C3                              		RET
    96 00000093                                 
    97 00000093                                 _api_initmalloc: ; void api_initmalloc(void)
    98 00000093 53                              		PUSH 	EBX
    99 00000094 BA 00000008                     		MOV 	EDX, 8
   100 00000099 2E 8B 1D 00000020               		MOV 	EBX, [CS:0x0020]
   101 000000A0 89 D8                           		MOV 	EAX, EBX
   102 000000A2 05 00008000                     		ADD 	EAX, 32*1024
   103 000000A7 2E 8B 0D 00000000               		MOV 	ECX, [CS:0x0000]
   104 000000AE 29 C1                           		SUB 	ECX, EAX
   105 000000B0 CD 40                           		INT 	0x40
   106 000000B2 5B                              		POP 	EBX
   107 000000B3 C3                              		RET
   108 000000B4                                 
   109 000000B4                                 _api_malloc: ; char *api_malloc(int size)
   110 000000B4 53                              		PUSH 	EBX
   111 000000B5 BA 00000009                     		MOV 	EDX, 9
   112 000000BA 2E 8B 1D 00000020               		MOV 	EBX, [CS:0x0020]
   113 000000C1 8B 4C 24 08                     		MOV 	ECX, [ESP+4+4]
   114 000000C5 CD 40                           		INT 	0x40
   115 000000C7 5B                              		POP 	EBX
   116 000000C8 C3                              		RET
   117 000000C9                                 
   118 000000C9                                 _api_free: ; void api_free(char *addr, int size)
   119 000000C9 53                              		PUSH 	EBX
   120 000000CA BA 0000000A                     		MOV 	EDX, 10
   121 000000CF 2E 8B 1D 00000020               		MOV 	EBX, [CS:0x0020]
   122 000000D6 8B 44 24 08                     		MOV 	EAX, [ESP+4+4]
   123 000000DA 8B 4C 24 0C                     		MOV 	ECX, [ESP+4+8]
   124 000000DE CD 40                           		INT 	0x40
   125 000000E0 5B                              		POP 	EBX
   126 000000E1 C3                              		RET
   127 000000E2                                 
   128 000000E2                                 _api_point: ; void api_point(int win, int x, int y, int col)
   129 000000E2 57                              		PUSH 	EDI
   130 000000E3 56                              		PUSH 	ESI
   131 000000E4 53                              		PUSH 	EBX
   132 000000E5 BA 0000000B                     		MOV 	EDX, 11
   133 000000EA 8B 5C 24 10                     		MOV 	EBX, [ESP+12+4]
   134 000000EE 8B 74 24 14                     		MOV 	ESI, [ESP+12+8]
   135 000000F2 8B 7C 24 18                     		MOV 	EDI, [ESP+12+12]
   136 000000F6 8B 44 24 1C                     		MOV 	EAX, [ESP+12+16]
   137 000000FA CD 40                           		INT 	0x40
   138 000000FC 5B                              		POP 	EBX
   139 000000FD 5E                              		POP 	ESI
   140 000000FE 5F                              		POP 	EDI
   141 000000FF C3                              		RET
   142 00000100                                 
   143 00000100                                 _api_refreshwin: ; void api_refreshwin(int win, int x0, int y0, int x1, int y1)
   144 00000100 57                              		PUSH 	EDI
   145 00000101 56                              		PUSH 	ESI
   146 00000102 53                              		PUSH 	EBX
   147 00000103 BA 0000000C                     		MOV 	EDX, 12
   148 00000108 8B 5C 24 10                     		MOV 	EBX, [ESP+12+4]
   149 0000010C 8B 44 24 14                     		MOV 	EAX, [ESP+12+8]
   150 00000110 8B 4C 24 18                     		MOV 	ECX, [ESP+12+12]
   151 00000114 8B 74 24 1C                     		MOV 	ESI, [ESP+12+16]
   152 00000118 8B 7C 24 20                     		MOV 	EDI, [ESP+12+20]
   153 0000011C CD 40                           		INT 	0x40
   154 0000011E 5B                              		POP 	EBX
   155 0000011F 5E                              		POP 	ESI
   156 00000120 5F                              		POP 	EDI
   157 00000121 C3                              		RET
   158 00000122                                 
   159 00000122                                 _api_linewin: ; void api_linewin(int win, int x0, int y0, int x1, int y1, int col)
   160 00000122 57                              		PUSH 	EDI
   161 00000123 56                              		PUSH 	ESI
   162 00000124 55                              		PUSH 	EBP
   163 00000125 53                              		PUSH 	EBX
   164 00000126                                 
   165 00000126 BA 0000000D                     		MOV 	EDX, 13
   166 0000012B 8B 5C 24 14                     		MOV 	EBX, [ESP+16+4]
   167 0000012F 8B 44 24 18                     		MOV 	EAX, [ESP+16+8]
   168 00000133 8B 4C 24 1C                     		MOV 	ECX, [ESP+16+12]
   169 00000137 8B 74 24 20                     		MOV 	ESI, [ESP+16+16]
   170 0000013B 8B 7C 24 24                     		MOV 	EDI, [ESP+16+20]
   171 0000013F 8B 6C 24 28                     		MOV 	EBP, [ESP+16+24]
   172 00000143 CD 40                           		INT 	0x40
   173 00000145                                 
   174 00000145 5B                              		POP 	EBX
   175 00000146 5D                              		POP 	EBP
   176 00000147 5E                              		POP 	ESI
   177 00000148 5F                              		POP 	EDI
   178 00000149 C3                              		RET
   179 0000014A                                 
   180 0000014A                                 _api_closewin: ; void api_closewin(int win)
   181 0000014A 53                              		PUSH 	EBX
   182 0000014B                                 
   183 0000014B BA 0000000E                     		MOV 	EDX, 14
   184 00000150 8B 5C 24 08                     		MOV 	EBX, [ESP+4+4]
   185 00000154 CD 40                           		INT 	0x40
   186 00000156                                 
   187 00000156 5B                              		POP 	EBX
   188 00000157 C3                              		RET