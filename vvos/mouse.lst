     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 	EXTERN	_fifo32_put
     9 00000000                                 	EXTERN	_mouse_rate
    10 00000000                                 	EXTERN	_wait_KBC_sendready
    11 00000000                                 [FILE "mouse.c"]
    12                                          [SECTION .data]
    13 00000000                                 	ALIGNB	4
    14 00000000                                 _mouse_rate:
    15 00000000 00000002                        	DD	2
    16                                          [SECTION .text]
    17 00000000                                 	GLOBAL	_inthandler2c
    18 00000000                                 _inthandler2c:
    19 00000000 55                              	PUSH	EBP
    20 00000001 89 E5                           	MOV	EBP,ESP
    21 00000003 6A 64                           	PUSH	100
    22 00000005 68 000000A0                     	PUSH	160
    23 0000000A E8 [00000000]                   	CALL	_io_out8
    24 0000000F 6A 62                           	PUSH	98
    25 00000011 6A 20                           	PUSH	32
    26 00000013 E8 [00000000]                   	CALL	_io_out8
    27 00000018 6A 60                           	PUSH	96
    28 0000001A E8 [00000000]                   	CALL	_io_in8
    29 0000001F 03 05 [00000008]                	ADD	EAX,DWORD [_mousedata0]
    30 00000025 50                              	PUSH	EAX
    31 00000026 FF 35 [00000004]                	PUSH	DWORD [_mousefifo]
    32 0000002C E8 [00000000]                   	CALL	_fifo32_put
    33 00000031 C9                              	LEAVE
    34 00000032 C3                              	RET
    35 00000033                                 	GLOBAL	_mouse_decode
    36 00000033                                 _mouse_decode:
    37 00000033 55                              	PUSH	EBP
    38 00000034 89 E5                           	MOV	EBP,ESP
    39 00000036 57                              	PUSH	EDI
    40 00000037 56                              	PUSH	ESI
    41 00000038 53                              	PUSH	EBX
    42 00000039 51                              	PUSH	ECX
    43 0000003A 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
    44 0000003D 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
    45 00000040 89 D6                           	MOV	ESI,EDX
    46 00000042 8A 43 03                        	MOV	AL,BYTE [3+EBX]
    47 00000045 84 C0                           	TEST	AL,AL
    48 00000047 75 13                           	JNE	L3
    49 00000049 80 FA FA                        	CMP	DL,-6
    50 0000004C 74 08                           	JE	L15
    51 0000004E                                 L14:
    52 0000004E 31 C0                           	XOR	EAX,EAX
    53 00000050                                 L2:
    54 00000050 5A                              	POP	EDX
    55 00000051 5B                              	POP	EBX
    56 00000052 5E                              	POP	ESI
    57 00000053 5F                              	POP	EDI
    58 00000054 5D                              	POP	EBP
    59 00000055 C3                              	RET
    60 00000056                                 L15:
    61 00000056 C6 43 03 01                     	MOV	BYTE [3+EBX],1
    62 0000005A EB F2                           	JMP	L14
    63 0000005C                                 L3:
    64 0000005C 3C 01                           	CMP	AL,1
    65 0000005E 0F 84 00000083                  	JE	L16
    66 00000064 3C 02                           	CMP	AL,2
    67 00000066 74 73                           	JE	L17
    68 00000068 3C 03                           	CMP	AL,3
    69 0000006A 74 05                           	JE	L18
    70 0000006C 83 C8 FF                        	OR	EAX,-1
    71 0000006F EB DF                           	JMP	L2
    72 00000071                                 L18:
    73 00000071 8A 0B                           	MOV	CL,BYTE [EBX]
    74 00000073 81 E6 000000FF                  	AND	ESI,255
    75 00000079 89 C8                           	MOV	EAX,ECX
    76 0000007B 88 53 02                        	MOV	BYTE [2+EBX],DL
    77 0000007E 83 E0 07                        	AND	EAX,7
    78 00000081 89 73 08                        	MOV	DWORD [8+EBX],ESI
    79 00000084 89 43 0C                        	MOV	DWORD [12+EBX],EAX
    80 00000087 88 C8                           	MOV	AL,CL
    81 00000089 0F B6 53 01                     	MOVZX	EDX,BYTE [1+EBX]
    82 0000008D 83 E0 10                        	AND	EAX,16
    83 00000090 89 53 04                        	MOV	DWORD [4+EBX],EDX
    84 00000093 C6 43 03 01                     	MOV	BYTE [3+EBX],1
    85 00000097 84 C0                           	TEST	AL,AL
    86 00000099 74 09                           	JE	L12
    87 0000009B 81 CA FFFFFF00                  	OR	EDX,-256
    88 000000A1 89 53 04                        	MOV	DWORD [4+EBX],EDX
    89 000000A4                                 L12:
    90 000000A4 83 E1 20                        	AND	ECX,32
    91 000000A7 84 C9                           	TEST	CL,CL
    92 000000A9 74 07                           	JE	L13
    93 000000AB 81 4B 08 FFFFFF00               	OR	DWORD [8+EBX],-256
    94 000000B2                                 L13:
    95 000000B2 8B 43 04                        	MOV	EAX,DWORD [4+EBX]
    96 000000B5 8B 3D [00000000]                	MOV	EDI,DWORD [_mouse_rate]
    97 000000BB 99                              	CDQ
    98 000000BC F7 FF                           	IDIV	EDI
    99 000000BE 8B 4B 08                        	MOV	ECX,DWORD [8+EBX]
   100 000000C1 89 43 04                        	MOV	DWORD [4+EBX],EAX
   101 000000C4 F7 D9                           	NEG	ECX
   102 000000C6 89 C8                           	MOV	EAX,ECX
   103 000000C8 89 4B 08                        	MOV	DWORD [8+EBX],ECX
   104 000000CB 99                              	CDQ
   105 000000CC F7 FF                           	IDIV	EDI
   106 000000CE 89 43 08                        	MOV	DWORD [8+EBX],EAX
   107 000000D1 B8 00000001                     	MOV	EAX,1
   108 000000D6 E9 FFFFFF75                     	JMP	L2
   109 000000DB                                 L17:
   110 000000DB 88 53 01                        	MOV	BYTE [1+EBX],DL
   111 000000DE C6 43 03 03                     	MOV	BYTE [3+EBX],3
   112 000000E2 E9 FFFFFF67                     	JMP	L14
   113 000000E7                                 L16:
   114 000000E7 83 E6 C8                        	AND	ESI,-56
   115 000000EA 89 F0                           	MOV	EAX,ESI
   116 000000EC 3C 08                           	CMP	AL,8
   117 000000EE 0F 85 FFFFFF5A                  	JNE	L14
   118 000000F4 88 13                           	MOV	BYTE [EBX],DL
   119 000000F6 C6 43 03 02                     	MOV	BYTE [3+EBX],2
   120 000000FA E9 FFFFFF4F                     	JMP	L14
   121 000000FF                                 	GLOBAL	_enable_mouse
   122 000000FF                                 _enable_mouse:
   123 000000FF 55                              	PUSH	EBP
   124 00000100 89 E5                           	MOV	EBP,ESP
   125 00000102 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   126 00000105 A3 [00000004]                   	MOV	DWORD [_mousefifo],EAX
   127 0000010A 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   128 0000010D A3 [00000008]                   	MOV	DWORD [_mousedata0],EAX
   129 00000112 E8 [00000000]                   	CALL	_wait_KBC_sendready
   130 00000117 68 000000D4                     	PUSH	212
   131 0000011C 6A 64                           	PUSH	100
   132 0000011E E8 [00000000]                   	CALL	_io_out8
   133 00000123 E8 [00000000]                   	CALL	_wait_KBC_sendready
   134 00000128 68 000000F4                     	PUSH	244
   135 0000012D 6A 60                           	PUSH	96
   136 0000012F E8 [00000000]                   	CALL	_io_out8
   137 00000134 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   138 00000137 C6 40 03 00                     	MOV	BYTE [3+EAX],0
   139 0000013B C9                              	LEAVE
   140 0000013C C3                              	RET
   141 0000013D                                 	GLOBAL	_mousefifo
   142                                          [SECTION .data]
   143 00000004                                 	ALIGNB	4
   144 00000004                                 _mousefifo:
   145 00000004 00 00 00 00                     	RESB	4
   146 00000008                                 	GLOBAL	_mousedata0
   147                                          [SECTION .data]
   148 00000008                                 	ALIGNB	4
   149 00000008                                 _mousedata0:
   150 00000008 00 00 00 00                     	RESB	4
